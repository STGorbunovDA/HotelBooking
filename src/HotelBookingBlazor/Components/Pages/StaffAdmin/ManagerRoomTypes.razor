@page "/staff-admin/manage-room-types"

@inject IRoomTypeService RoomTypeService

<div class="container">
    <div class="d-flex justify-content-between align-items-center">
        <h1 class="m-0">Управление типами комнат</h1>
        <NavLink href="staff-admin/manage-room-types/new" class="btn btn-sm btn-primary">+ Добавить новый тип комнаты</NavLink>
    </div>
    <hr />
    <div class="row">
        @if (_roomTypes.Length == 0)
        {
            <p>Тип номера еще не создан</p>
        }
        else
        {
            foreach (var rt in _roomTypes)
            {
                var editLink = $"staff-admin/manage-room-types/{rt.Id}/edit";
                var manageRoomLink = $"/staff-admin/manage-room-types/{rt.Id}/rooms";
                
                <div class="col-sm-3">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="m-0">@rt.Name</h6>
                            <NavLink href="@editLink" class="btn btn-sm btn-default">
                                <i class="fa fa-edit"></i>
                            </NavLink>
                        </div>
                        <div class="card-body">
                            <img src="@rt.Image" class="img-fluid" />
                        </div>
                        <div class="card-footer d-flex justify-content-between">
                            <h6>@rt.Price.ToString("c")/Ночь</h6>
                            <NavLink href="@manageRoomLink" class="btn btn-sm btn-default">
                                <i class="fa fa-list"></i>
                            </NavLink>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@code {
    private RoomTypeListModel[] _roomTypes = [];

    protected override async Task OnInitializedAsync()
    {
        _roomTypes = await RoomTypeService.GetRoomTypesForManagePageAsync();
    }
}
