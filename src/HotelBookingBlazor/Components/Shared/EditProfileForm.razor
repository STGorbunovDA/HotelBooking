@using System.ComponentModel.DataAnnotations
@using HotelBookingBlazor.Components.Account.Shared


@inject ILogger<EditProfileForm> Logger
@inject IUserService UserService


<StatusMessage Message="@_message" />
<EditForm Model="Input" method="post" OnValidSubmit="EditProfileAsync" FormName="edit-profile" Enhance>
    <DataAnnotationsValidator />
    <hr />
    <input type="hidden" value="@Input.Id" name="Input.Id" />
    <div class="row">
        <div class="col-sm-6">
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.FirstName" class="form-control" aria-required="true" placeholder="Имя" />
                <label for="email">Имя</label>
                <ValidationMessage For="() => Input.FirstName" class="text-danger" />
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.LastName" class="form-control" aria-required="true" placeholder="Фамилия" />
                <label for="email">Фамилия</label>
                <ValidationMessage For="() => Input.LastName" class="text-danger" />
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.ContactNumber" class="form-control" aria-required="true" placeholder="Номер телефона" />
                <label for="email">Контактный номер</label>
                <ValidationMessage For="() => Input.ContactNumber" class="text-danger" />
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="Почта" />
                <label for="email">Почта</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
        </div>
        @if (Role.HasValue && Role != RoleType.Guest)
        {
            <div class="col-sm-6">
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Designation" class="form-control" aria-required="true" placeholder="Назначение" />
                    <label for="designation">Назначение</label>
                    <ValidationMessage For="() => Input.Designation" class="text-danger" />
                </div>
            </div>
        }
        else
        {
            <input type="hidden" value="@Input.Designation" name="Input.Designation" />
        }
    </div>
    <div>
        <button type="submit" class="w-100 btn btn-lg btn-primary">Обновить профиль</button>
    </div>
</EditForm>


@code {

    [CascadingParameter] public HttpContext HttpContext { get; set; }

    [Parameter, EditorRequired] public string UserId { get; set; }

    [Parameter] public RoleType? Role { get; set; }

    [Parameter] public EventCallback OnSuccess { get; set; }

    [SupplyParameterFromForm]
    private MyProfileModel Input { get; set; } = new();

    private string? _message = null;

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            var model = await UserService.GetProfileDetailsAsync(UserId);
            if (model is null)
            {
                _message = "Пользователя  не существует";
                return;
            }
            Input = model;
        }

    }

    public async Task EditProfileAsync(EditContext editContext)
    {
        var result = await UserService.UpdateProfileAsync(Input, Role);

        if (!result.IsSucces)
        {
            _message = result.ErrorMessage;
            return;
        }

        Logger.LogInformation($"Обновлены сведения о пользователе");

        await OnSuccess.InvokeAsync();
    }
}
